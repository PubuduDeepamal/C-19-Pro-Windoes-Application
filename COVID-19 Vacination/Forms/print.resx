<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        05uSXQAAAABJRU5ErkJggg==
</value>
  </data>
</root>